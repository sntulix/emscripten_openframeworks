name: emscripten_build

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  emscripten_build:
    # Name the Job
    name: emscripten build
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: show uname
        run: uname -a

#      - name: symbolic link python2
#        run: sudo ln -s /usr/bin/python2 /usr/bin/python

      - name: update apt
        run: sudo apt update

      - name: install base packages
        run: sudo apt-get install git gcc g++ cmake wget unzip

      - name: wget alias
        run: alias wget="wget --quiet"

      - name: cd
        run: cd ~

      - name: Checkout other repo
        uses: actions/checkout@v2
        with:
          repository: emscripten-core/emsdk
          path: emsdk

      - name: ls
        run: ls
        working-directory: ./emsdk

      - name: emscripten install 1.39.4-fastcomp
        run: ./emsdk install 1.39.4-fastcomp # https://github.com/constantdupuis/of_docker
        working-directory: ./emsdk

      - name: ls
        run: ls
        working-directory: ./emsdk/

      - name: ls
        run: ls
        working-directory: ./emsdk/fastcomp

      - name: ls
        run: ls
        working-directory: ./emsdk/fastcomp/emscripten

      - name: emscripten activate 1.39.4-fastcomp
        run: ./emsdk activate 1.39.4-fastcomp # https://github.com/constantdupuis/of_docker
        working-directory: ./emsdk

      - name: emscripten set PATH 1.39.4-fastcomp
        run: source "/home/runner/work/emscripten_openframeworks/emscripten_openframeworks/emsdk/emsdk_env.sh" && emcc --clear-cache
        working-directory: ./emsdk

      - name: emscripten set NODE_JS  dir
        run: echo NODE_JS = "'/home/runner/work/emscripten_openframeworks/emscripten_openframeworks/emsdk/node/12.18.1_64bit/bin/node'" >> ~/.emscripten
        working-directory: ./emsdk

      - name: emscripten set LLVM_ROOT  dir
        run: echo LLVM_ROOT = "'/home/runner/work/emscripten_openframeworks/emscripten_openframeworks/emsdk/fastcomp/fastcomp/bin'" >> ~/.emscripten
        working-directory: ./emsdk

      - name: emscripten set BINARYEN_ROOT binaryen dir
        run: echo BINARYEN_ROOT = "'/home/runner/work/emscripten_openframeworks/emscripten_openframeworks/emsdk/fastcomp'" >> ~/.emscripten
        working-directory: ./emsdk

      - name: show env
        run: env

      - name: check .emscripten
        run: cat ./emsdk/.emscripten

      - name: cd
        run: cd ~

      - name: openFrameworks download
        run: wget --quiet https://github.com/openframeworks/openFrameworks/archive/0.11.0.zip

      - name: openFrameworks unzip
        run: unzip -qq 0.11.0.zip

      - name: ls
        run: ls
        working-directory: ./openFrameworks-0.11.0

      - name: openFrameworks download libs
        run: scripts/emscripten/./download_libs.sh
        working-directory: ./openFrameworks-0.11.0

      - name: openFrameworks copy a Makefile
        run: cp ../../../scripts/templates/emscripten/Makefile .
        working-directory: ./openFrameworks-0.11.0/examples/3d/3DPrimitivesExample

      - name: openFrameworks build sample
        run: ../../../../emsdk/fastcomp/emscripten/emmake make
        working-directory: ./openFrameworks-0.11.0/examples/3d/3DPrimitivesExample
        continue-on-error: true

      - name: ls
        run: ls
        working-directory: ./openFrameworks-0.11.0/examples/3d/3DPrimitivesExample

      - name: ls
        run: ls
        working-directory: ./openFrameworks-0.11.0/examples/3d/3DPrimitivesExample/bin

      - uses: actions/upload-artifact@v2
        with:
          name: openFrameworks_3DPrimitivesExample_Webassembly
          path: ./openFrameworks-0.11.0/examples/3d/3DPrimitivesExample/bin
